//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace UnitTestProject1.EF4Behaviour
{
    public partial class EF4SurrogateDetail
    {
        #region Primitive Properties
    
        public virtual int DbId
        {
            get;
            set;
        }
    
        public virtual int Master_DbId
        {
            get { return _master_DbId; }
            set
            {
                if (_master_DbId != value)
                {
                    if (EFMasterSurrogate != null && EFMasterSurrogate.DbId != value)
                    {
                        EFMasterSurrogate = null;
                    }
                    _master_DbId = value;
                }
            }
        }
        private int _master_DbId;

        #endregion

        #region Navigation Properties
    
        public virtual EFMasterSurrogate EFMasterSurrogate
        {
            get { return _eFMasterSurrogate; }
            set
            {
                if (!ReferenceEquals(_eFMasterSurrogate, value))
                {
                    var previousValue = _eFMasterSurrogate;
                    _eFMasterSurrogate = value;
                    FixupEFMasterSurrogate(previousValue);
                }
            }
        }
        private EFMasterSurrogate _eFMasterSurrogate;

        #endregion

        #region Association Fixup
    
        private void FixupEFMasterSurrogate(EFMasterSurrogate previousValue)
        {
            if (previousValue != null && previousValue.EF4SurrogateDetail.Contains(this))
            {
                previousValue.EF4SurrogateDetail.Remove(this);
            }
    
            if (EFMasterSurrogate != null)
            {
                if (!EFMasterSurrogate.EF4SurrogateDetail.Contains(this))
                {
                    EFMasterSurrogate.EF4SurrogateDetail.Add(this);
                }
                if (Master_DbId != EFMasterSurrogate.DbId)
                {
                    Master_DbId = EFMasterSurrogate.DbId;
                }
            }
        }

        #endregion

    }
}
