@*Ejemplos que muestran el comportamiento (algo hijoputa) de las propiedades ViewBag del controlador / vista,
ViewContext y HtmlHelper

Cada vez que se llama a uno de estos, CREA un nuevo ViewDataDictionary con los valores del anterior.
(esto lo tuve que mirar con el Reflector)

Cuando lo piensas tiene sentido, porque lo que intentan es que cada nuevo "contexto" no afecte al anterior
Lo malo es que si no sabes este comportamiento, puede dar resultados bastante inesperados*@


@model dynamic
<style>
    .bloquecillo {
        float:left;
        border:1px solid black;
        margin: 1px;
    }
    .clear {
        clear:both;
    }
</style>
@{
    ViewBag.FromIndexView = "FromIndexView";
    Html.ViewBag.FromHtmlVieweBag = "FromHtmlVieweBag";
    //ViewContext.ViewBag.FromIndexView = "FromIndexView";
    //this.PutInViewData("FromIndexView", "FromIndexView");
    //ViewContext.Controller.ViewBag.FromIndexView = "FromIndexView";
}

<h2>The Index</h2>

<div class="bloquecillo">
    <h3>ViewBag</h3>

    <div>@ViewBag.FromIndex</div>
    <div>@ViewBag.FromIndexView</div>
    <div>@ViewBag.FromHtmlVieweBag</div>
</div>

<div class="bloquecillo">
    <h3>Html.ViewBag</h3>

    <div>@Html.ViewBag.FromIndex</div>
    <div>@Html.ViewBag.FromIndexView</div>
    <div>@Html.ViewBag.FromHtmlVieweBag</div>

</div>

<div class="bloquecillo">
    <h3>Html.ViewContext.ViewBag</h3>

    <div>@Html.ViewContext.ViewBag.FromIndex</div>
    <div>@Html.ViewContext.ViewBag.FromIndexView</div>
    <div>@Html.ViewContext.ViewBag.FromHtmlVieweBag</div>

</div>

@*<div class="clear"></div>
<hr/>

<h2>RenderPartial</h2>
@{Html.RenderPartial("ThePartial");}

<h2>RenderAction</h2>

@{Html.RenderAction("ThePartial");}*@
