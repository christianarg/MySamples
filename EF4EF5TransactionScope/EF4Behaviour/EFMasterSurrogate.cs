//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace UnitTestProject1.EF4Behaviour
{
    public partial class EFMasterSurrogate
    {
        #region Primitive Properties
    
        public virtual int DbId
        {
            get;
            set;
        }
    
        public virtual string MyProperty
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<EF4SurrogateDetail> EF4SurrogateDetail
        {
            get
            {
                if (_eF4SurrogateDetail == null)
                {
                    var newCollection = new FixupCollection<EF4SurrogateDetail>();
                    newCollection.CollectionChanged += FixupEF4SurrogateDetail;
                    _eF4SurrogateDetail = newCollection;
                }
                return _eF4SurrogateDetail;
            }
            set
            {
                if (!ReferenceEquals(_eF4SurrogateDetail, value))
                {
                    var previousValue = _eF4SurrogateDetail as FixupCollection<EF4SurrogateDetail>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEF4SurrogateDetail;
                    }
                    _eF4SurrogateDetail = value;
                    var newValue = value as FixupCollection<EF4SurrogateDetail>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEF4SurrogateDetail;
                    }
                }
            }
        }
        private ICollection<EF4SurrogateDetail> _eF4SurrogateDetail;

        #endregion

        #region Association Fixup
    
        private void FixupEF4SurrogateDetail(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EF4SurrogateDetail item in e.NewItems)
                {
                    item.EFMasterSurrogate = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EF4SurrogateDetail item in e.OldItems)
                {
                    if (ReferenceEquals(item.EFMasterSurrogate, this))
                    {
                        item.EFMasterSurrogate = null;
                    }
                }
            }
        }

        #endregion

    }
}
